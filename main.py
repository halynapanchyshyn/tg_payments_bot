from import_main import *
from telethon.tl.custom import Button
from utilities_as import Utilities


bot = TelegramClient('bot', API_ID, API_HASH)
utils = Utilities()
bot.parse_mode = 'html'


@bot.on(events.NewMessage(pattern='/start'))
async def start(event):
    if isinstance(event.peer_id, PeerUser):
        keyboard_buttons = [
            Button.text('üì≤ –ú–µ–Ω—é', resize=True, single_use=True),
        ]

        await bot.send_message(
            entity=event.peer_id,
            message='–ü—Ä–∏–≤—ñ—Ç, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É \'–ú–µ–Ω—é\'',
            buttons=keyboard_buttons)


@bot.on(events.NewMessage(pattern='üì≤ –ú–µ–Ω—é'))
async def start(event):
    if isinstance(event.peer_id, PeerUser):
        inline_buttons = ReplyInlineMarkup(
            [
                KeyboardButtonRow(
                    [
                        KeyboardButtonCallback(
                            text='üìù –ö–æ–º—É–Ω–∞–ª—å–Ω—ñ –ø–æ—Å–ª—É–≥–∏ –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞',
                            data=b'summa'
                        )
                    ]
                ),
                KeyboardButtonRow(
                    [
                        KeyboardButtonCallback(
                            text='üö∞ –í–æ–¥–∞',
                            data=b'w'
                        ),
                        KeyboardButtonCallback(
                            text='üí° –°–≤—ñ—Ç–ª–æ',
                            data=b'l'
                        )
                    ]

                ),
                KeyboardButtonRow(
                    [
                        KeyboardButtonCallback(
                            text='üè° –ñ–µ–∫',
                            data=b'j'
                        ),
                        KeyboardButtonCallback(
                            text='üî• –ì–∞–∑',
                            data=b'g'
                        )
                    ]

                ),
                KeyboardButtonRow(
                    [
                        KeyboardButtonCallback(text='üõú –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç', data=b'i')
                    ]
                )
            ]
        )

        await bot.send_message(
            entity=event.peer_id,
            message='–í–∏–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—É–º–∏ –æ–ø–ª–∞—Ç–∏',
            buttons=inline_buttons)


@bot.on(events.CallbackQuery(data='summa'))
async def summa(event):
    async def summ_func():
        a = await utils.gas()
        b = await utils.jek()
        c = utils.internet()
        d = utils.light()
        e = utils.water()
        res = round((a + b + c + d + e), 2)
        return str(res)
    message = await event.respond(f'<i>‚¨áÔ∏è –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ... ‚¨áÔ∏è</i>')
    summ = await summ_func()
    await bot.edit_message(message, f'<b><i>üìù - –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –¥–æ –æ–ø–ª–∞—Ç–∏ {str(summ)} –≥—Ä–Ω.</b></i>')


@bot.on(events.CallbackQuery(data='w'))
async def water(event):
    message = await event.respond(f'<i>‚¨áÔ∏è –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ... ‚¨áÔ∏è</i>')
    w = utils.water()
    await bot.edit_message(message, f'<b><i>üö∞ - –î–æ –æ–ø–ª–∞—Ç–∏ –∑–∞ –≤–æ–¥—É {str(w)} –≥—Ä–Ω.</i></b>')


@bot.on(events.CallbackQuery(data='l'))
async def light(event):
    message = await event.respond(f'<i>‚¨áÔ∏è –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ... ‚¨áÔ∏è</i>')
    l = utils.light()
    await bot.edit_message(message, f'<b><i>üí° - –î–æ –æ–ø–ª–∞—Ç–∏ –∑–∞ —Å–≤—ñ—Ç–ª–æ {str(l)} –≥—Ä–Ω.</b></i>')


@bot.on(events.CallbackQuery(data='j'))
async def jek(event):
    message = await event.respond(f'<i>‚¨áÔ∏è –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ... ‚¨áÔ∏è</i>')
    j = await utils.jek()
    await bot.edit_message(message, f'<b><i>üè° - –î–æ –æ–ø–ª–∞—Ç–∏ –∑–∞ –ñ–ö–• {str(j)} –≥—Ä–Ω.</b></i>')


@bot.on(events.CallbackQuery(data='g'))
async def gas(event):
    message = await event.respond(f'<i>‚¨áÔ∏è –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ... ‚¨áÔ∏è</i>')
    g = await utils.gas()
    await bot.edit_message(message, f'<b><i>üî• - –î–æ –æ–ø–ª–∞—Ç–∏ –∑–∞ –≥–∞–∑ {str(g)} –≥—Ä–Ω.</b></i>')


@bot.on(events.CallbackQuery(data='i'))
async def internet(event):
    message = await event.respond(f'<i>‚¨áÔ∏è –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ... ‚¨áÔ∏è</i>')
    i = utils.internet()
    await bot.edit_message(message, f'<b><i>üõú - –î–æ –æ–ø–ª–∞—Ç–∏ –∑–∞ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç {str(i)} –≥—Ä–Ω.</b></i>')


bot.start()
bot.run_until_disconnected()
